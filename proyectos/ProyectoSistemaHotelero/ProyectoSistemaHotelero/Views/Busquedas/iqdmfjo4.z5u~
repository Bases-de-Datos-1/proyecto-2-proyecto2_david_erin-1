@using ProyectoSistemaHotelero.Models.ViewModels
@model BusquedaHotelesViewModel
@{
    ViewData["Title"] = "Buscar Hoteles - UTravel";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Reset y ajustes para evitar conflictos con layout */
    .busqueda-container {
        margin-top: 90px; /* Aumentado para dar más espacio del navbar */
        background: #f8f9fa;
        min-height: calc(100vh - 90px);
        position: relative;
        z-index: 1; /* Agregado z-index bajo */
    }

    /* Formulario de búsqueda con z-index apropiado */
    .search-section {
        background: white;
        border-bottom: 1px solid #e0e0e0;
        padding: 25px 0; /* Aumentado padding */
        position: relative; /* Cambiado de static a relative */
        width: 100%;
        z-index: 10; /* Z-index que no interfiera con navbar pero sea accesible */
        box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Sombra sutil */
    }

    .search-form-wrapper {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 20px; /* Aumentado padding lateral */
        position: relative;
        z-index: 11;
    }

    .search-inputs-row {
        display: flex;
        gap: 15px; /* Aumentado gap */
        align-items: end;
        flex-wrap: wrap;
    }

    .input-col {
        flex: 1;
        min-width: 140px; /* Aumentado min-width */
        position: relative;
        z-index: 12;
    }

    .input-col.wide {
        flex: 2;
        min-width: 200px; /* Aumentado min-width */
    }

    .input-col label {
        display: block;
        font-size: 12px; /* Aumentado tamaño */
        font-weight: 600;
        color: #666;
        margin-bottom: 6px; /* Aumentado margen */
        text-transform: uppercase;
        pointer-events: none; /* Asegurar que no interfiera */
    }

    .input-col input,
    .input-col select {
        width: 100%;
        padding: 10px 12px; /* Aumentado padding */
        border: 2px solid #ccc; /* Border más grueso */
        border-radius: 6px; /* Bordes más redondeados */
        font-size: 14px; /* Aumentado font-size */
        box-sizing: border-box;
        background: white;
        position: relative;
        z-index: 13;
        cursor: pointer; /* Cursor pointer explícito */
        transition: all 0.2s ease;
    }

    .input-col input:focus,
    .input-col select:focus {
        outline: none;
        border-color: #7db8b3;
        box-shadow: 0 0 0 3px rgba(125, 184, 179, 0.1); /* Sombra de foco */
        transform: none; /* Sin transformaciones que puedan causar problemas */
    }

    .input-col input:hover,
    .input-col select:hover {
        border-color: #999;
    }

    .buttons-col {
        display: flex;
        gap: 10px; /* Aumentado gap */
        flex-shrink: 0;
        position: relative;
        z-index: 14;
    }

    .btn-buscar,
    .btn-filtros {
        padding: 10px 18px; /* Aumentado padding */
        border: none;
        border-radius: 6px; /* Bordes más redondeados */
        font-size: 14px; /* Aumentado font-size */
        font-weight: 600;
        cursor: pointer;
        white-space: nowrap;
        transition: all 0.2s ease;
        position: relative;
        z-index: 15;
    }

    .btn-buscar {
        background: #7db8b3;
        color: white;
    }

    .btn-buscar:hover {
        background: #62a3a8;
        transform: translateY(-1px);
    }

    .btn-filtros {
        background: #666;
        color: white;
    }

    .btn-filtros:hover {
        background: #555;
        transform: translateY(-1px);
    }

    /* Asegurar que los botones sean clickeables */
    .btn-buscar,
    .btn-filtros {
        pointer-events: all !important;
        user-select: none;
    }

    /* Contenido de resultados con z-index bajo */
    .resultados-wrapper {
        max-width: 1200px;
        margin: 0 auto;
        padding: 25px 20px; /* Aumentado padding */
        position: relative;
        z-index: 2;
    }

    .resultados-info {
        margin-bottom: 25px; /* Aumentado margen */
    }

    .total-resultados {
        font-size: 16px;
        font-weight: 600;
        color: #333;
    }

    .grid-hoteles {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); /* Aumentado min-width */
        gap: 20px; /* Aumentado gap */
        margin-bottom: 40px; /* Aumentado margen */
    }

    .tarjeta-hotel {
        background: white;
        border: 1px solid #e0e0e0;
        border-radius: 12px; /* Bordes más redondeados */
        overflow: hidden;
        transition: all 0.3s ease;
        cursor: pointer;
        position: relative;
        z-index: 3;
    }

    .tarjeta-hotel:hover {
        box-shadow: 0 8px 25px rgba(0,0,0,0.15); /* Sombra más pronunciada */
        transform: translateY(-3px); /* Efecto más notorio */
    }

    .imagen-hotel {
        width: 100%;
        height: 200px; /* Aumentado altura */
        background: linear-gradient(135deg, #7db8b3 0%, #62a3a8 100%);
        background-size: cover;
        background-position: center;
        position: relative;
    }

    .placeholder-imagen {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        color: white;
        font-size: 40px; /* Aumentado tamaño */
    }

    .info-hotel {
        padding: 20px; /* Aumentado padding */
    }

    .nombre-hotel {
        font-size: 18px; /* Aumentado font-size */
        font-weight: 700;
        color: #333;
        margin: 0 0 6px 0; /* Aumentado margen */
        line-height: 1.3;
    }

    .tipo-hotel {
        font-size: 13px; /* Aumentado font-size */
        color: #666;
        text-transform: uppercase;
        font-weight: 500;
        margin-bottom: 8px; /* Aumentado margen */
    }

    .ubicacion-hotel {
        font-size: 14px; /* Aumentado font-size */
        color: #666;
        margin-bottom: 12px; /* Aumentado margen */
        display: flex;
        align-items: center;
        gap: 6px; /* Aumentado gap */
    }

    .servicios-hotel {
        display: flex;
        flex-wrap: wrap;
        gap: 6px; /* Aumentado gap */
        margin-bottom: 15px; /* Aumentado margen */
    }

    .tag-servicio {
        background: #e8f6f3;
        color: #2d5aa0;
        padding: 4px 8px; /* Aumentado padding */
        border-radius: 12px; /* Bordes más redondeados */
        font-size: 11px; /* Aumentado font-size */
        font-weight: 500;
    }

    .precio-hotel {
        border-top: 1px solid #f0f0f0;
        padding-top: 15px; /* Aumentado padding */
        text-align: right;
    }

    .rango-precio {
        font-size: 16px; /* Aumentado font-size */
        font-weight: 700;
        color: #7db8b3;
        margin: 0;
    }

    .texto-noche {
        font-size: 12px; /* Aumentado font-size */
        color: #666;
    }

    /* Sin resultados */
    .sin-resultados {
        text-align: center;
        padding: 60px 20px; /* Aumentado padding */
        color: #666;
    }

    .sin-resultados h3 {
        font-size: 24px; /* Aumentado font-size */
        color: #333;
        margin-bottom: 15px; /* Aumentado margen */
    }

    /* Paginación */
    .paginacion {
        display: flex;
        justify-content: center;
        gap: 8px; /* Aumentado gap */
        margin-top: 40px; /* Aumentado margen */
    }

    .pagina-btn {
        padding: 8px 12px; /* Aumentado padding */
        border: 1px solid #ddd;
        background: white;
        color: #333;
        text-decoration: none;
        border-radius: 6px; /* Bordes más redondeados */
        font-size: 14px; /* Aumentado font-size */
        transition: all 0.2s;
        position: relative;
        z-index: 4;
    }

    .pagina-btn:hover,
    .pagina-btn.activo {
        background: #7db8b3;
        color: white;
        border-color: #7db8b3;
        text-decoration: none;
        transform: translateY(-1px);
    }

    /* Modal de filtros con z-index muy alto */
    .modal-filtros {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.6); /* Fondo más oscuro */
        z-index: 9998; /* Z-index muy alto pero menor que navbar */
    }

    .modal-filtros.mostrar {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .contenido-modal {
        background: white;
        border-radius: 12px; /* Bordes más redondeados */
        padding: 30px; /* Aumentado padding */
        max-width: 500px; /* Aumentado max-width */
        width: 90%;
        max-height: 80vh;
        overflow-y: auto;
        margin: 20px;
        position: relative;
        z-index: 9999;
        box-shadow: 0 20px 40px rgba(0,0,0,0.3); /* Sombra más pronunciada */
    }

    .header-modal {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px; /* Aumentado margen */
        padding-bottom: 15px; /* Aumentado padding */
        border-bottom: 1px solid #eee;
    }

    .titulo-modal {
        font-size: 20px; /* Aumentado font-size */
        font-weight: 600;
        margin: 0;
    }

    .btn-cerrar {
        background: none;
        border: none;
        font-size: 24px; /* Aumentado font-size */
        color: #666;
        cursor: pointer;
        padding: 5px; /* Aumentado padding */
        width: 30px; /* Aumentado tamaño */
        height: 30px; /* Aumentado tamaño */
        border-radius: 50%;
        transition: all 0.2s ease;
    }

    .btn-cerrar:hover {
        background: #f0f0f0;
        color: #333;
    }

    .grupo-filtro {
        margin-bottom: 25px; /* Aumentado margen */
    }

    .etiqueta-filtro {
        display: block;
        font-weight: 600;
        margin-bottom: 10px; /* Aumentado margen */
        color: #333;
        font-size: 14px; /* Aumentado font-size */
    }

    .inputs-precio {
        display: flex;
        gap: 10px; /* Aumentado gap */
        align-items: center;
    }

    .inputs-precio input {
        flex: 1;
        padding: 10px 12px; /* Aumentado padding */
        border: 2px solid #ddd; /* Border más grueso */
        border-radius: 6px; /* Bordes más redondeados */
        font-size: 14px; /* Aumentado font-size */
        transition: all 0.2s ease;
    }

    .inputs-precio input:focus {
        border-color: #7db8b3;
        box-shadow: 0 0 0 3px rgba(125, 184, 179, 0.1);
    }

    .separador-precio {
        color: #666;
        font-weight: 500;
        font-size: 14px; /* Aumentado font-size */
    }

    .grupo-checkboxes {
        display: flex;
        flex-direction: column;
        gap: 8px; /* Aumentado gap */
        max-height: 160px; /* Aumentado altura */
        overflow-y: auto;
        border: 2px solid #eee; /* Border más grueso */
        border-radius: 6px; /* Bordes más redondeados */
        padding: 12px; /* Aumentado padding */
    }

    .item-checkbox {
        display: flex;
        align-items: center;
        gap: 8px; /* Aumentado gap */
        padding: 2px 0; /* Agregado padding */
    }

    .item-checkbox input[type="checkbox"] {
        margin: 0;
        width: 16px; /* Tamaño específico */
        height: 16px; /* Tamaño específico */
        cursor: pointer;
    }

    .item-checkbox label {
        margin: 0;
        font-weight: normal;
        font-size: 14px; /* Aumentado font-size */
        cursor: pointer;
        flex: 1;
    }

    .acciones-modal {
        display: flex;
        gap: 15px; /* Aumentado gap */
        justify-content: flex-end;
        margin-top: 30px; /* Aumentado margen */
        padding-top: 20px; /* Aumentado padding */
        border-top: 1px solid #eee;
    }

    .btn-cancelar {
        background: #6c757d;
        color: white;
        border: none;
        padding: 10px 18px; /* Aumentado padding */
        border-radius: 6px; /* Bordes más redondeados */
        cursor: pointer;
        font-size: 14px; /* Aumentado font-size */
        transition: all 0.2s ease;
    }

    .btn-cancelar:hover {
        background: #545b62;
        transform: translateY(-1px);
    }

    /* Asegurar que todos los elementos interactivos tengan pointer-events */
    input, select, button, .btn-buscar, .btn-filtros, .btn-cancelar, .btn-cerrar {
        pointer-events: all !important;
    }

    /* Responsive mejoras */
    @media (max-width: 768px) {
        .search-inputs-row {
            flex-direction: column;
            gap: 12px;
        }
        
        .input-col,
        .input-col.wide {
            width: 100%;
            min-width: auto;
        }
        
        .buttons-col {
            width: 100%;
            justify-content: stretch;
        }
        
        .btn-buscar,
        .btn-filtros {
            flex: 1;
        }
        
        .grid-hoteles {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="busqueda-container">
    <!-- Formulario de búsqueda -->
    <div class="search-section">
        <div class="search-form-wrapper">
            <form method="post" action="@Url.Action("BuscarHoteles", "Busquedas")" id="formBusqueda">
                <div class="search-inputs-row">
                    <div class="input-col wide">
                        <label for="inputUbicacion">Ubicación</label>
                        <input type="text" 
                               name="Ubicacion" 
                               value="@(Model.Ubicacion ?? "")" 
                               placeholder="¿Dónde te quieres hospedar?" 
                               id="inputUbicacion"
                               autocomplete="off">
                    </div>
                    
                    <div class="input-col">
                        <label for="inputCheckIn">Check In</label>
                        <input type="date" 
                               name="FechaCheckIn" 
                               value="@Model.FechaCheckIn.ToString("yyyy-MM-dd")" 
                               id="inputCheckIn">
                    </div>
                    
                    <div class="input-col">
                        <label for="inputCheckOut">Check Out</label>
                        <input type="date" 
                               name="FechaCheckOut" 
                               value="@Model.FechaCheckOut.ToString("yyyy-MM-dd")" 
                               id="inputCheckOut">
                    </div>
                    
                    <div class="input-col">
                        <label for="selectPersonas">Huéspedes</label>
                        <select name="CantidadPersonas" id="selectPersonas">
                            @for (int i = 1; i <= 10; i++)
                            {
                                if (Model.CantidadPersonas == i)
                                {
                                    <option value="@i" selected>@i @(i == 1 ? "persona" : "personas")</option>
                                }
                                else
                                {
                                    <option value="@i">@i @(i == 1 ? "persona" : "personas")</option>
                                }
                            }
                        </select>
                    </div>
                    
                    <div class="buttons-col">
                        <button type="submit" class="btn-buscar" id="btnBuscar">
                            <i class="fas fa-search"></i> Buscar
                        </button>
                        
                        <button type="button" class="btn-filtros" id="btnFiltros">
                            <i class="fas fa-filter"></i> Filtros
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Resultados -->
    <div class="resultados-wrapper">
        @if (Model.Resultados?.Any() == true)
        {
            <div class="resultados-info">
                <div class="total-resultados">
                    @Model.TotalResultados @(Model.TotalResultados == 1 ? "hotel encontrado" : "hoteles encontrados")
                </div>
            </div>

            <div class="grid-hoteles">
                @foreach (var hotel in Model.Resultados)
                {
                    <div class="tarjeta-hotel" onclick="verDetalle('@hotel.CedulaJuridica')">
                        <div class="imagen-hotel" style="@(string.IsNullOrEmpty(hotel.ImagenPrincipal) ? "" : $"background-image: url('/uploads/fotos/{hotel.ImagenPrincipal}')")">
                            @if (string.IsNullOrEmpty(hotel.ImagenPrincipal))
                            {
                                <div class="placeholder-imagen">
                                    <i class="fas fa-bed"></i>
                                </div>
                            }
                        </div>
                        
                        <div class="info-hotel">
                            <h3 class="nombre-hotel">@hotel.Nombre</h3>
                            <p class="tipo-hotel">@hotel.TipoHotel</p>
                            <p class="ubicacion-hotel">
                                <i class="fas fa-map-marker-alt"></i>
                                @hotel.UbicacionCompleta
                            </p>
                            
                            @if (hotel.Servicios.Any())
                            {
                                <div class="servicios-hotel">
                                    @foreach (var servicio in hotel.Servicios.Take(4))
                                    {
                                        <span class="tag-servicio">@servicio</span>
                                    }
                                    @if (hotel.Servicios.Count > 4)
                                    {
                                        <span class="tag-servicio">+@(hotel.Servicios.Count - 4)</span>
                                    }
                                </div>
                            }
                            
                            <div class="precio-hotel">
                                <div class="rango-precio">
                                    ₡@hotel.PrecioMinimo.ToString("N0") - ₡@hotel.PrecioMaximo.ToString("N0")
                                </div>
                                <div class="texto-noche">por noche</div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Paginación -->
            @if (Model.TotalResultados > Model.ResultadosPorPagina)
            {
                <div class="paginacion">
                    @{
                        var totalPaginas = (int)Math.Ceiling((double)Model.TotalResultados / Model.ResultadosPorPagina);
                        var paginaActual = Model.PaginaActual;
                    }
                    
                    @if (paginaActual > 1)
                    {
                        <a href="@GenerarUrlPagina(paginaActual - 1)" class="pagina-btn">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    }
                    
                    @for (int i = Math.Max(1, paginaActual - 2); i <= Math.Min(totalPaginas, paginaActual + 2); i++)
                    {
                        <a href="@GenerarUrlPagina(i)" class="pagina-btn @(i == paginaActual ? "activo" : "")">
                            @i
                        </a>
                    }
                    
                    @if (paginaActual < totalPaginas)
                    {
                        <a href="@GenerarUrlPagina(paginaActual + 1)" class="pagina-btn">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    }
                </div>
            }
        }
        else if (!string.IsNullOrEmpty(Model.Ubicacion))
        {
            <div class="sin-resultados">
                <h3>No se encontraron hoteles</h3>
                <p>Intenta modificar tus criterios de búsqueda o fechas.</p>
            </div>
        }
        else
        {
            <div class="sin-resultados">
                <h3>¡Encuentra tu hospedaje ideal!</h3>
                <p>Ingresa una ubicación y fechas para comenzar tu búsqueda.</p>
            </div>
        }
    </div>
</div>

<!-- Modal de filtros -->
<div class="modal-filtros" id="modalFiltros">
    <div class="contenido-modal">
        <div class="header-modal">
            <h3 class="titulo-modal">Filtros de búsqueda</h3>
            <button type="button" class="btn-cerrar" id="btnCerrarModal">
                <i class="fas fa-times"></i>
            </button>
        </div>
        
        <form method="post" action="@Url.Action("AplicarFiltros", "Busquedas")" id="formFiltros">
            <input type="hidden" name="Ubicacion" value="@(Model.Ubicacion ?? "")" id="hiddenUbicacion">
            <input type="hidden" name="FechaCheckIn" value="@Model.FechaCheckIn.ToString("yyyy-MM-dd")" id="hiddenCheckIn">
            <input type="hidden" name="FechaCheckOut" value="@Model.FechaCheckOut.ToString("yyyy-MM-dd")" id="hiddenCheckOut">
            <input type="hidden" name="CantidadPersonas" value="@Model.CantidadPersonas" id="hiddenPersonas">
            
            <div class="grupo-filtro">
                <label class="etiqueta-filtro">Rango de precios (por noche)</label>
                <div class="inputs-precio">
                    <input type="number" 
                           name="PrecioMinimo" 
                           value="@(Model.PrecioMinimo?.ToString() ?? "")" 
                           placeholder="Desde ₡" 
                           id="inputPrecioMin">
                    <span class="separador-precio">-</span>
                    <input type="number" 
                           name="PrecioMaximo" 
                           value="@(Model.PrecioMaximo?.ToString() ?? "")" 
                           placeholder="Hasta ₡" 
                           id="inputPrecioMax">
                </div>
            </div>
            
            @if (Model.ServiciosDisponibles?.Any() == true)
            {
                <div class="grupo-filtro">
                    <label class="etiqueta-filtro">Servicios</label>
                    <div class="grupo-checkboxes">
                        @foreach (var servicio in Model.ServiciosDisponibles)
                        {
                            <div class="item-checkbox">
                                <input type="checkbox" 
                                       name="ServiciosSeleccionados" 
                                       value="@servicio.ServicioID"
                                       @(Model.ServiciosSeleccionados?.Contains(servicio.ServicioID) == true ? "checked" : "")
                                       id="srv-@servicio.ServicioID">
                                <label for="srv-@servicio.ServicioID">@servicio.Nombre</label>
                            </div>
                        }
                    </div>
                </div>
            }
            
            @if (Model.ComodidadesDisponibles?.Any() == true)
            {
                <div class="grupo-filtro">
                    <label class="etiqueta-filtro">Comodidades</label>
                    <div class="grupo-checkboxes">
                        @foreach (var comodidad in Model.ComodidadesDisponibles)
                        {
                            <div class="item-checkbox">
                                <input type="checkbox" 
                                       name="ComodidadesSeleccionadas" 
                                       value="@comodidad.ComodidadID"
                                       @(Model.ComodidadesSeleccionadas?.Contains(comodidad.ComodidadID) == true ? "checked" : "")
                                       id="cmd-@comodidad.ComodidadID">
                                <label for="cmd-@comodidad.ComodidadID">@comodidad.Nombre</label>
                            </div>
                        }
                    </div>
                </div>
            }
            
            <div class="acciones-modal">
                <button type="button" class="btn-cancelar" id="btnCancelarFiltros">Cancelar</button>
                <button type="button" class="btn-buscar" id="btnAplicarFiltros">Aplicar Filtros</button>
            </div>
        </form>
    </div>
</div>

<script>
// Inicialización cuando el DOM esté listo
document.addEventListener('DOMContentLoaded', function() {
    console.log('Inicializando vista de búsqueda...');

    // Referencias a elementos
    const btnFiltros = document.getElementById('btnFiltros');
    const btnCerrarModal = document.getElementById('btnCerrarModal');
    const btnCancelarFiltros = document.getElementById('btnCancelarFiltros');
    const btnAplicarFiltros = document.getElementById('btnAplicarFiltros');
    const modalFiltros = document.getElementById('modalFiltros');
    const formBusqueda = document.getElementById('formBusqueda');
    const formFiltros = document.getElementById('formFiltros');

    // Función para abrir modal de filtros
    function abrirFiltros() {
        console.log('Abriendo modal de filtros...');
        actualizarCamposOcultos();
        if (modalFiltros) {
            modalFiltros.classList.add('mostrar');
            document.body.style.overflow = 'hidden'; // Prevenir scroll del body
        }
    }

    // Función para cerrar modal de filtros
    function cerrarFiltros() {
        console.log('Cerrando modal de filtros...');
        if (modalFiltros) {
            modalFiltros.classList.remove('mostrar');
            document.body.style.overflow = ''; // Restaurar scroll del body
        }
    }

    // Función para actualizar campos ocultos del modal
    function actualizarCamposOcultos() {
        const ubicacion = document.getElementById('inputUbicacion')?.value || '';
        const checkIn = document.getElementById('inputCheckIn')?.value || '';
        const checkOut = document.getElementById('inputCheckOut')?.value || '';
        const personas = document.getElementById('selectPersonas')?.value || '1';

        const hiddenUbicacion = document.getElementById('hiddenUbicacion');
        const hiddenCheckIn = document.getElementById('hiddenCheckIn');
        const hiddenCheckOut = document.getElementById('hiddenCheckOut');
        const hiddenPersonas = document.getElementById('hiddenPersonas');

        if (hiddenUbicacion) hiddenUbicacion.value = ubicacion;
        if (hiddenCheckIn) hiddenCheckIn.value = checkIn;
        if (hiddenCheckOut) hiddenCheckOut.value = checkOut;
        if (hiddenPersonas) hiddenPersonas.value = personas;
    }

    // Función para aplicar filtros
    function aplicarFiltros() {
        console.log('Aplicando filtros...');
        actualizarCamposOcultos();
        if (formFiltros) {
            formFiltros.submit();
        }
    }

    // Event listeners
    if (btnFiltros) {
        btnFiltros.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            abrirFiltros();
        });
    }

    if (btnCerrarModal) {
        btnCerrarModal.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            cerrarFiltros();
        });
    }

    if (btnCancelarFiltros) {
        btnCancelarFiltros.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            cerrarFiltros();
        });
    }

    if (btnAplicarFiltros) {
        btnAplicarFiltros.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            aplicarFiltros();
        });
    }

    // Cerrar modal al hacer clic en el fondo
    if (modalFiltros) {
        modalFiltros.addEventListener('click', function(e) {
            if (e.target === this) {
                cerrarFiltros();
            }
        });
    }

    // Validación de fechas
    const checkIn = document.getElementById('inputCheckIn');
    const checkOut = document.getElementById('inputCheckOut');
    
    if (checkIn && checkOut) {
        // Establecer fecha mínima como hoy
        const hoy = new Date();
        const hoyStr = hoy.toISOString().split('T')[0];
        checkIn.min = hoyStr;
        
        // Función para validar fechas
        function validarFechas() {
            try {
                if (checkIn.value) {
                    const fechaEntrada = new Date(checkIn.value);
                    const minSalida = new Date(fechaEntrada);
                    minSalida.setDate(minSalida.getDate() + 1);
                    checkOut.min = minSalida.toISOString().split('T')[0];
                    
                    if (checkOut.value) {
                        const fechaSalida = new Date(checkOut.value);
                        if (fechaSalida <= fechaEntrada) {
                            checkOut.value = minSalida.toISOString().split('T')[0];
                        }
                    }
                }
            } catch (error) {
                console.error('Error validando fechas:', error);
            }
        }

        checkIn.addEventListener('change', validarFechas);
        
        checkOut.addEventListener('change', function() {
            try {
                if (checkIn.value && this.value) {
                    const fechaEntrada = new Date(checkIn.value);
                    const fechaSalida = new Date(this.value);
                    
                    if (fechaSalida <= fechaEntrada) {
                        alert('La fecha de salida debe ser posterior a la fecha de entrada.');
                        const minSalida = new Date(fechaEntrada);
                        minSalida.setDate(minSalida.getDate() + 1);
                        this.value = minSalida.toISOString().split('T')[0];
                    }
                }
            } catch (error) {
                console.error('Error validando fecha de salida:', error);
            }
        });

        // Validar fechas al cargar
        validarFechas();
    }

    // Debug: verificar que los elementos son clickeables
    const elementosInteractivos = document.querySelectorAll('input, select, button');
    elementosInteractivos.forEach(elemento => {
        elemento.addEventListener('click', function(e) {
            console.log('Elemento clickeado:', this.id || this.className);
        });
    });

    console.log('Inicialización completada');
});

// Función global para ver detalle de hotel
function verDetalle(cedulaJuridica) {
    console.log('Ver detalle del hotel:', cedulaJuridica);
    window.location.href = '@Url.Action("DetalleHotel", "Busquedas")?cedulaJuridica=' + cedulaJuridica;
}

// Funciones globales para debugging
window.testBusqueda = {
    abrirFiltros: function() {
        document.getElementById('btnFiltros')?.click();
    },
    verificarElementos: function() {
        const elementos = {
            formBusqueda: !!document.getElementById('formBusqueda'),
            btnFiltros: !!document.getElementById('btnFiltros'),
            modalFiltros: !!document.getElementById('modalFiltros'),
            inputUbicacion: !!document.getElementById('inputUbicacion')
        };
        console.table(elementos);
        return elementos;
    },
    testClick: function(elementId) {
        const elemento = document.getElementById(elementId);
        if (elemento) {
            elemento.click();
            console.log('Click enviado a:', elementId);
        } else {
            console.error('Elemento no encontrado:', elementId);
        }
    }
};
</script>

@functions {
    public string GenerarUrlPagina(int pagina)
    {
        return Url.Action("Hoteles", "Busquedas", new { 
            ubicacion = Model.Ubicacion,
            checkIn = Model.FechaCheckIn.ToString("yyyy-MM-dd"),
            checkOut = Model.FechaCheckOut.ToString("yyyy-MM-dd"),
            personas = Model.CantidadPersonas,
            pagina = pagina
        });
    }
}